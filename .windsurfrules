# Windsurf Rules for Cerberus IAM Admin Web

## Snapshot
- Next.js 16 (Pages Router) IAM admin portal using React 19, TypeScript, Tailwind CSS 4, and shadcn/ui.
- Strict linting (`npm run lint`) and formatting (`npm run format:fix`) are mandatory before review.
- Tests: Jest for unit/integration, Playwright for end-to-end flows.

## Operating Guidelines
1. Install dependencies with `npm install`.
2. Run the dev server via `npm run dev` while iterating.
3. Validate changes with `npm run lint`, `npm run format:fix`, `npm test`, and targeted Playwright commands (`npm run test:e2e`, `npm run test:all` when flows change).

## Code Expectations
- Import internal modules through the `@/` alias; avoid long relative paths.
- New pages that rely on the shared layout must use `NextPageWithLayout` and define `getLayout` returning `AppLayout`.
- Maintain type safety: prefer explicit return types, ban `any`, and keep ESLint clean.
- Form work: define Zod schemas without `.default()` on booleans and provide defaults through `useForm`.
- Extend shadcn/ui components outside `src/components/ui/*`; regenerate primitives with `npx shadcn@latest add`.
- Use the `cn` helper for conditional classes and follow Tailwind design tokens already in use.

## Testing Notes
- Co-locate Jest specs (`*.test.ts[x]`) beside the implementation; keep them deterministic.
- Store Playwright specs in `e2e/` with clear names (e.g., `login.spec.ts`, `tenant-onboarding.spec.ts`); reset tenant data between tests via fixtures.
- Reference `TESTING.md` for command matrix, coverage options, and debugging tips.

## Change Management
- Commit messages follow Conventional Commits.
- Pull requests should link issues, describe the change, and include screenshots/gifs for UI updates.
- Highlight security-sensitive modifications and coordinate reviews per `SECURITY.md`.

## Reference Material
- Architectural detail: `CLAUDE.md`
- Contributor workflow: `AGENTS.md`
- Testing strategy: `TESTING.md`
- Support channels: `SUPPORT.md`
