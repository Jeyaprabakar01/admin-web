# Cursor Rules for Cerberus IAM Admin Web

## Project Context
- Next.js 16 (Pages Router) admin portal for Cerberus IAM.
- React 19 + TypeScript with Tailwind CSS 4 and shadcn/ui components.
- Tooling: ESLint (`npm run lint` with `--max-warnings=0`), Prettier (`npm run format:fix`), Jest, Playwright.

## Everyday Workflow
1. Install dependencies with `npm install`.
2. Develop locally using `npm run dev`.
3. Before committing run:
   - `npm run lint`
   - `npm run format:fix`
   - `npm test`
   - `npm run test:e2e` (or `npm run test:all` for full coverage when flows change).

## Coding Standards
- Use `@/` path aliases for internal imports; avoid relative traversals.
- Pages that need layouts must be typed as `NextPageWithLayout` (from `@/types/page`) and supply `getLayout` that wraps `AppLayout`.
- Keep shadcn/ui primitives in `src/components/ui/*` untouched; extend via composition or regenerate with `npx shadcn@latest add`.
- When defining Zod schemas, avoid `.default()` on booleansâ€”provide defaults through `useForm({ defaultValues })`.
- Prefer ternary rendering for values that may be `unknown` to satisfy the React Compiler.
- Maintain strict typing; do not introduce unchecked `any` or disable lint rules without justification.

## Testing Guidance
- Co-locate Jest unit/integration tests next to source files (`*.test.ts[x]`).
- Place Playwright scenarios in `e2e/`, using descriptive filenames (e.g., `tenant-onboarding.spec.ts`).
- Share fixtures responsibly and keep tests deterministic; favor Testing Library patterns for React components.

## Reference Documents
- Architecture & deep patterns: `CLAUDE.md`
- Contributor workflow & conventions: `AGENTS.md`
- Testing playbook: `TESTING.md`
- Security considerations: `SECURITY.md`
